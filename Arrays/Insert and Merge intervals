/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public ArrayList<Interval> insert(ArrayList<Interval> in, Interval ni) {
        if(in == null) {
            ArrayList<Interval> a = new ArrayList<>();
            a.add(ni);
            return a;
        } else if(in.size() == 0) {
            in.add(ni);
            return in;
        }
        int i = 0;
        Interval insert = ni;
        while(i < in.size()) {
            
            Interval curr = in.get(i);
            
            if(insert.start > curr.end) {
                i++;
                continue;
                
            } else if(insert.end < curr.start) {
                in.add(i, insert);
                break;
                
            } else {
                
                insert.start = Math.min(insert.start, curr.start);
                insert.end = Math.max(insert.end, curr.end);
                in.remove(i);
            }
        }
        
        if(i == in.size()) {
            in.add(insert);
        }
        return in;
    }
}
